- name: 2d.layer.global-states
  desc: Checks that layers correctly use global render states.
  size: 200, 200
  code: |
    ctx.fillStyle = 'rgba(0, 0, 255, 1)';

    var circle = new Path2D();
    circle.arc(90, 90, 45, 0, 2 * Math.PI);
    ctx.fill(circle);

    %(render_states)s

    ctx.beginLayer();

    ctx.fillStyle = 'rgba(225, 0, 0, 1)';
    ctx.fillRect(50, 50, 75, 50);
    ctx.fillStyle = 'rgba(0, 255, 0, 1)';
    ctx.fillRect(70, 70, 75, 50);

    ctx.endLayer();
  reference: |
    ctx.fillStyle = 'rgba(0, 0, 255, 1)';

    var circle = new Path2D();
    circle.arc(90, 90, 45, 0, 2 * Math.PI);
    ctx.fill(circle);

    %(render_states)s

    canvas2 = document.createElement("canvas");
    ctx2 = canvas2.getContext("2d");

    ctx2.fillStyle = 'rgba(225, 0, 0, 1)';
    ctx2.fillRect(50, 50, 75, 50);
    ctx2.fillStyle = 'rgba(0, 255, 0, 1)';
    ctx2.fillRect(70, 70, 75, 50);

    ctx.drawImage(canvas2, 0, 0);
  variants:
    alpha:
      render_states: ctx.globalAlpha = 0.6;
    globalcompositeoperation:
      render_states: ctx.globalCompositeOperation = 'source-in';
    shadow:
      render_states: |-
        ctx.shadowOffsetX = -10;
        ctx.shadowOffsetY = 10;
        ctx.shadowColor = 'orange';
    filter:
      render_states: ctx.filter = 'sepia(1) opacity(30%)';
    alpha.shadow:
      render_states: |-
        ctx.globalAlpha = 0.5;
        ctx.shadowOffsetX = -10;
        ctx.shadowOffsetY = 10;
        ctx.shadowColor = 'orange';
    alpha.filter:
      render_states: |-
        ctx.globalAlpha = 0.6;
        ctx.filter = 'drop-shadow(-9px 9px 0px #e81)';
    alpha.filter.shadow:
      fuzzy: maxDifference=0-1; totalPixels=0-5821
      render_states: |-
        ctx.globalAlpha = 0.5;
        ctx.filter = 'sepia(0.5)';
        ctx.shadowOffsetX = -10;
        ctx.shadowOffsetY = 10;
        ctx.shadowColor = 'orange';
    alpha.filter.globalcompositeoperation:
      render_states: |-
        ctx.globalAlpha = 0.6;
        ctx.globalCompositeOperation = 'source-in';
        ctx.filter = 'drop-shadow(-9px 9px 0px #e81)';
    filter.shadow:
      fuzzy: maxDifference=0-1; totalPixels=0-49
      render_states: |-
        ctx.filter = 'sepia(1) opacity(70%)';
        ctx.shadowOffsetX = -10;
        ctx.shadowOffsetY = 10;
        ctx.shadowColor = 'rgba(0,1,0,0.5)';
    filter.globalcompositeoperation:
      render_states: |-
        ctx.globalCompositeOperation = 'source-in';
        ctx.filter = 'drop-shadow(-9px 9px 0px #e81)';
