diff --git a/tools/third_party/mod_pywebsocket/http_header_util.py b/tools/third_party/mod_pywebsocket/http_header_util.py
index 21fde59af1..a3a1a0f1a0 100644
--- a/tools/third_party/mod_pywebsocket/http_header_util.py
+++ b/tools/third_party/mod_pywebsocket/http_header_util.py
@@ -31,7 +31,7 @@ in HTTP RFC http://www.ietf.org/rfc/rfc2616.txt.
 """
 
 from __future__ import absolute_import
-import six.moves.urllib.parse
+import six.moves.urllib.parse as urllib_parse
 
 _SEPARATORS = '()<>@,;:\\"/[]?={} \t'
 
@@ -214,7 +214,7 @@ def quote_if_necessary(s):
 def parse_uri(uri):
     """Parse absolute URI then return host, port and resource."""
 
-    parsed = six.moves.urllib.parse.urlsplit(uri)
+    parsed = urllib_parse.urlsplit(uri)
     if parsed.scheme != 'wss' and parsed.scheme != 'ws':
         # |uri| must be a relative URI.
         # TODO(toyoshim): Should validate |uri|.
diff --git a/tools/third_party/mod_pywebsocket/msgutil.py b/tools/third_party/mod_pywebsocket/msgutil.py
index f58ca78e14..41ab513dc0 100644
--- a/tools/third_party/mod_pywebsocket/msgutil.py
+++ b/tools/third_party/mod_pywebsocket/msgutil.py
@@ -36,7 +36,7 @@ bytes writing/reading.
 """
 
 from __future__ import absolute_import
-import six.moves.queue
+from six.moves import queue
 import threading
 
 # Export Exception symbols from msgutil for backward compatibility
@@ -120,7 +120,7 @@ class MessageReceiver(threading.Thread):
 
         threading.Thread.__init__(self)
         self._request = request
-        self._queue = six.moves.queue.Queue()
+        self._queue = queue.Queue()
         self._onmessage = onmessage
         self._stop_requested = False
         self.setDaemon(True)
@@ -153,7 +153,7 @@ class MessageReceiver(threading.Thread):
         """
         try:
             message = self._queue.get_nowait()
-        except six.moves.queue.Empty:
+        except queue.Empty:
             message = None
         return message
 
@@ -185,7 +185,7 @@ class MessageSender(threading.Thread):
         """
         threading.Thread.__init__(self)
         self._request = request
-        self._queue = six.moves.queue.Queue()
+        self._queue = queue.Queue()
         self.setDaemon(True)
         self.start()
 
