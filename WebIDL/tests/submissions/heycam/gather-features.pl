#!/usr/bin/perl -w

use strict;

my %features = ();
my %featuresByType = ();

sub read_features {
  my $fh;
  my $fn = shift;
  open $fh, $fn;
  while (<$fh>) {
    next unless s/^\s*\/\/ feature: //;
    /^([^(]*) \(([^)]*)\)(?: \(([^)]*)\))?$/ or die;
    my $name = $1;
    my $type = $2;
    my $conditions = $3;
    $conditions = '' unless defined $conditions;

    my $key = "$name ($type)";
    $features{$key} = { } unless defined $features{$key};
    $features{$key}{$conditions} = [] unless defined $features{$key}{$conditions};
    push @{$features{$key}{$conditions}}, $fn;

    $featuresByType{$type} = { } unless defined $featuresByType{$type};
    $featuresByType{$type}{$name} = { } unless defined $featuresByType{$type}{$name};
    $featuresByType{$type}{$name}{$conditions} = [] unless defined $featuresByType{$type}{$name}{$conditions};
    push @{$featuresByType{$type}{$name}{$conditions}}, $fn;
  }
  close $fh;
}

sub read_tests {
  my $fh;
  my $fn;

  opendir $fh, '.';
  while ($fn = readdir $fh) {
    next unless -f $fn && $fn =~ /\.html$/;
    read_features($fn);
  }
  closedir $fh;
}

sub print_features {
  my $fh;
  open $fh, '>features.txt';
  print $fh "# This file is generated by gather-features.pl.\n\n";
  for my $key (sort keys %features) {
    print $fh "$key\n";
    for my $conditions (sort keys %{$features{$key}}) {
      print $fh "  $conditions\n" unless $conditions eq '';
      for my $test (@{$features{$key}{$conditions}}) {
        print $fh "    $test\n";
      }
    }
  }
  close $fh;

  open $fh, '>features-by-type.txt';
  print $fh "# This file is generated by gather-features.pl.\n\n";
  for my $type (sort keys %featuresByType) {
    print $fh "$type\n";
    for my $name (sort keys %{$featuresByType{$type}}) {
      print $fh "  $name";
      for my $conditions (sort keys %{$featuresByType{$type}{$name}}) {
        print $fh " (";
        print $fh "$conditions - " unless $conditions eq '';
        print $fh join ', ', @{$featuresByType{$type}{$name}{$conditions}};
        print $fh ")";
      }
      print $fh "\n";
    }
  }
  close $fh;
}

read_tests();
print_features();
